<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetNuke.Web</name>
    </assembly>
    <members>
        <member name="M:DotNetNuke.Web.Api.AuthFilterBase.IsAuthorized(DotNetNuke.Web.Api.AuthFilterContext)">
            <summary>
            Tests if the request passes the authorization requirements
            </summary>
            <param name="context">The auth filter context</param>
            <returns>True when authorization is succesful</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.AuthFilterBase.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Co-ordinates check of authorization and handles Auth failure.  Should rarely be overridden.
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="P:DotNetNuke.Web.Api.AuthFilterBase.AllowMultiple">
            <summary>
            Gets or sets a value indicating whether more than one instance of the indicated attribute can be specified for a single program element.
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.AuthFilterContext.HandleUnauthorizedRequest">
            <summary>
            Processes requests that fail authorization. This default implementation creates a new response with the
            Unauthorized status code. Override this method to provide your own handling for unauthorized requests.
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.AuthorizeAttributeBase.IsAuthorized(DotNetNuke.Web.Api.AuthFilterContext)">
            <summary>
            Tests if the request passes the authorization requirements
            </summary>
            <param name="context">The auth filter context</param>
            <returns>True when authorization is succesful</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.AuthorizeAttributeBase.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Called by framework at start of Auth process, check if auth should be skipped and handles auth failure.  Should rarely need to be overridden.
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="M:DotNetNuke.Web.Api.AuthorizeAttributeBase.SkipAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Skips this authorization step if anonymous attribute is applied, override if auth should never be skipped, or other conditions are required
            </summary>
            <param name="actionContext"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetNuke.Web.Api.IOverrideDefaultAuthLevel">
            <summary>
            Implementing this interface on an Auth filter will allow the filter to override the default
            Host level auth provided by DnnController
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.Internal.Auth.AuthMessageHandlerBase.OnInboundRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            A chance to process inbound requests
            </summary>
            <param name="request">the request message</param>
            <param name="cancellationToken">a cancellationtoken</param>
            <returns>null normally, if a response is returned all inbound processing is terminated and the resposne is returned</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.Internal.Auth.AuthMessageHandlerBase.OnOutboundResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
            <summary>
            A change to process outbound responses
            </summary>
            <param name="response">The response message</param>
            <param name="cancellationToken">a cancellationtoken</param>
            <returns>the responsemessage</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.RouteExtensions.GetNameSpaces(System.Web.Routing.Route)">
            <summary>
            Get Namespaces that are searched for controllers for this route
            </summary>
            <returns>Namespaces</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.RouteExtensions.GetNameSpaces(System.Web.Http.Routing.IHttpRoute)">
            <summary>
            Get Namespaces that are searched for controllers for this route
            </summary>
            <returns>Namespaces</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.RouteExtensions.GetName(System.Web.Routing.Route)">
            <summary>
            Get the name of the route
            </summary>
            <returns>Route name</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.RouteExtensions.GetName(System.Web.Http.Routing.IHttpRoute)">
            <summary>
            Get the name of the route
            </summary>
            <returns>Route name</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.RequireHostAttribute.IsAuthorized(DotNetNuke.Web.Api.AuthFilterContext)">
            <summary>
            Tests if the request passes the authorization requirements
            </summary>
            <param name="context">The auth filter context</param>
            <returns>True when authorization is succesful</returns>
        </member>
        <member name="T:DotNetNuke.Web.Api.StringPassThroughMediaTypeFormatter">
            <summary>
            A MediaTypeFormatter that simply allows strings to pass through WebAPI and be associated with the specified MIME type
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.StringPassThroughMediaTypeFormatter.#ctor">
            <summary>
            Initialize a formatter that can handle text/plain and text/html
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.StringPassThroughMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initialize a formatter that can handle the specified media types
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.UrlHelperExtensions.DnnLink(System.Web.Http.Routing.UrlHelper,System.String,System.String,System.Object)">
            <summary>
            Generate WebAPI Links compatible with DNN Services Framework
            </summary>
            <param name="urlHelper">The UrlHelper</param>
            <param name="moduleFolderName">ModuleFolderName for the route</param>
            <param name="routeName">RouteName for the route</param>
            <param name="routeValues">Values to be passed to the route</param>
            <returns>a url</returns>
        </member>
        <member name="M:DotNetNuke.Web.Api.UrlHelperExtensions.DnnLink(System.Web.Http.Routing.UrlHelper,System.String,System.String,System.Object,DotNetNuke.Entities.Portals.PortalAliasInfo)">
            <summary>
            Generate WebAPI Links compatible with DNN Services Framework
            </summary>
            <param name="urlHelper">The UrlHelper</param>
            <param name="moduleFolderName">ModuleFolderName for the route</param>
            <param name="routeName">RouteName for the route</param>
            <param name="routeValues">Values to be passed to the route</param>
            <param name="portalAliasInfo">The PortalAlias to use in the Url </param>
            <returns>a url</returns>
        </member>
        <member name="T:DotNetNuke.Web.Common.Internal.DotNetNukeHttpApplication">
            <summary>
            DotNetNuke Http Application. It will handle Start, End, BeginRequest, Error event for whole application.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.Api.DnnApiController.PortalSettings">
            <summary>
            PortalSettings for the current portal
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.Api.DnnApiController.UserInfo">
            <summary>
            UserInfo for the current user
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.Api.DnnApiController.ActiveModule">
            <summary>
            ModuleInfo for the current module
            <remarks>Will be null unless a valid pair of module and tab ids were provided in the request</remarks>
            </summary>
        </member>
        <member name="T:DotNetNuke.Web.InternalServices.MessagingServiceController.SearchResult">
            <summary>
            This class stores a single search result needed by jQuery Tokeninput
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Mvp.SettingsViewBase.OnSettingsLoaded">
            <summary>
            The OnSettingsLoaded method is called when the Settings have been Loaded 
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Mvp.SettingsViewBase.OnSavingSettings">
            <summary>
            OnSavingSettings method is called just before the Settings are saved
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.Api.IMapRoute.MapHttpRoute(System.String,System.String,System.String,System.Object,System.Object,System.String[])">
            <summary>
            Sets up the route(s) for DotNetNuke services
            </summary>
            <param name="moduleFolderName">The name of the folder under DesktopModules in which your module resides</param>
            <param name="routeName">A unique name for the route</param>
            <param name="url">The parameterized portion of the route</param>
            <param name="defaults">Default values for the route parameters</param>
            <param name="constraints">The constraints</param>
            <param name="namespaces">The namespace(s) in which to search for the controllers for this route</param>
            <returns>A list of all routes that were registered.</returns>
            <remarks>The combination of moduleFolderName and routeName must be unique for each route</remarks>
        </member>
        <member name="M:DotNetNuke.Web.Api.IMapRoute.MapHttpRoute(System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            Sets up the route(s) for DotNetNuke services
            </summary>
            <param name="moduleFolderName">The name of the folder under DesktopModules in which your module resides</param>
            <param name="routeName">A unique name for the route</param>
            <param name="url">The parameterized portion of the route</param>
            <param name="defaults">Default values for the route parameters</param>
            <param name="namespaces">The namespace(s) in which to search for the controllers for this route</param>
            <returns>A list of all routes that were registered.</returns>
            <remarks>The combination of moduleFolderName and routeName must be unique for each route</remarks>
        </member>
        <member name="M:DotNetNuke.Web.Api.IMapRoute.MapHttpRoute(System.String,System.String,System.String,System.String[])">
            <summary>
            Sets up the route(s) for DotNetNuke services
            </summary>
            <param name="moduleFolderName">The name of the folder under DesktopModules in which your module resides</param>
            <param name="routeName">A unique name for the route</param>
            <param name="url">The parameterized portion of the route</param>
            <param name="namespaces">The namespace(s) in which to search for the controllers for this route</param>
            <returns>A list of all routes that were registered.</returns>
            <remarks>The combination of moduleFolderName and routeName must be unique for each route</remarks> 
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.CreateTemplate(Telerik.Web.UI.GridItemType)">
            <summary>
            Creates a ImageCommandColumnTemplate
            </summary>
            <returns>A ImageCommandColumnTemplate</returns>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.Initialize">
            <summary>
            Initialises the Column
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.CommandName">
            <summary>
            Gets or sets the CommandName for the Column
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.EditMode">
            <summary>
            EditMode for the Column
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.ImageURL">
            <summary>
            Gets or sets the URL of the Image
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.IconKey">
            <summary>
            The Icon Key to obtain ImageURL
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.IconSize">
            <summary>
            The Icon Siz to obtain ImageURL
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.IconStyle">
            <summary>
            The Icon Style to obtain ImageURL
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.KeyField">
            <summary>
            The Key Field that provides a Unique key to the data Item
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.NavigateURL">
            <summary>
            Gets or sets the URL of the Link (unless DataBinding through KeyField)
            </summary>
            <value>A String</value>
            <history>
            	[cnurse]	02/17/2006	Created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.NavigateURLFormatString">
            <summary>
            Gets or sets the URL Formatting string
            </summary>
            <value>A String</value>
            <history>
            	[cnurse]	01/06/2006	Created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.OnClickJs">
            <summary>
            Javascript text to attach to the OnClick Event
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.ShowImage">
            <summary>
            Gets or sets whether an Image is displayed
            </summary>
            <remarks>Defaults to True</remarks>
            <value>A Boolean</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.Text">
            <summary>
            Gets or sets the Text (for Header/Footer Templates)
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumn.VisibleField">
            <summary>
            An flag that indicates whether the buttons are visible.
            </summary>
            <value>A Boolean</value>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            InstantiateIn instantiates the template (implementation of ITemplate)
            </summary>
            <remarks>
            </remarks>
            <param name="container">The parent container (DataGridItem)</param>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.GetIsVisible(Telerik.Web.UI.GridItem)">
            <summary>
            Gets whether theButton is visible
            </summary>
            <param name="container">The parent container (DataGridItem)</param>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.GetValue(Telerik.Web.UI.GridItem)">
            <summary>
            Gets the value of the key
            </summary>
            <param name="container">The parent container (DataGridItem)</param>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.ItemDataBinding(System.Object,System.EventArgs)">
            <summary>
            Item_DataBinding runs when an Item of type GridItemType.Item is being data-bound
            </summary>
            <remarks>
            </remarks>
            <param name="sender"> The object that triggers the event</param>
            <param name="e">An EventArgs object</param>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.CommandName">
            <summary>
            Gets or sets the CommandName for the Column
            </summary>
            <value>A String</value>
            <history>
            	[cnurse]	02/17/2006	Created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.DesignMode">
            <summary>
            Gets or sets the Design Mode of the Column
            </summary>
            <value>A Boolean</value>
            <history>
            	[cnurse]	02/24/2006	Created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.EditMode">
            <summary>
            Gets or sets the CommandName for the Column
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.ImageURL">
            <summary>
            Gets or sets the URL of the Image
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.ItemType">
            <summary>
            The type of Template to Create
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.KeyField">
            <summary>
            The Key Field that provides a Unique key to the data Item
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.NavigateURL">
            <summary>
            Gets or sets the URL of the Link (unless DataBinding through KeyField)
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.NavigateURLFormatString">
            <summary>
            Gets or sets the URL Formatting string
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.OnClickJs">
            <summary>
            Javascript text to attach to the OnClick Event
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.ShowImage">
            <summary>
            Gets or sets whether an Image is displayed
            </summary>
            <remarks>Defaults to True</remarks>
            <value>A Boolean</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.Text">
            <summary>
            Gets or sets the Text (for Header/Footer Templates)
            </summary>
            <value>A String</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.Visible">
            <summary>
            An flag that indicates whether the buttons are visible (this is overridden if
            the VisibleField is set)
            changed
            </summary>
            <value>A Boolean</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridImageCommandColumnTemplate.VisibleField">
            <summary>
            An flag that indicates whether the buttons are visible.
            </summary>
            <value>A Boolean</value>
        </member>
        <member name="T:DotNetNuke.Web.UI.WebControls.DnnMemberListControl">
            <summary>
            This control is used for displaying a template based list of users based upon various filter and sorting capabilities.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.HeaderTemplate">
            <summary>
            Gets or sets the template for displaying the header section of a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.RowHeaderTemplate">
            <summary>
            Gets or sets the template for the row header.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.ItemTemplate">
            <summary>
            Gets or sets the template for displaying an item in a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.RowFooterTemplate">
            <summary>
            Gets or sets the template for the row footer.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.AlternatingRowHeaderTemplate">
            <summary>
            Gets or sets the template for displaying the alternating row headers in a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.AlternatingItemTemplate">
            <summary>
            Gets or sets the template for displaying the alternating items in a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.AlternatingRowFooterTemplate">
            <summary>
            Gets or sets the template for displaying the alternating row footers in a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.FooterTemplate">
            <summary>
            Gets or sets the template for displaying the footer section of a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.PageIndex">
            <summary>
            Gets or sets the index of the currently displayed page.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.PageSize">
            <summary>
            Gets or sets the number of records to display on a page in a DnnMemberListControl object.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.RowSize">
            <summary>
            Gets or sets the number of items displayed on each row.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.SortBy">
            <summary>
            Sets the property value to sort by.
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.SortAscending">
            <summary>
            Gets or sets the sort direction
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnMemberListControl.Filters">
            <summary>
            Gets or sets the collection of filters to apply when getting the list of members.
            </summary>
            <remarks>
            Posible keys are: RoleId, RelationshipTypeId, UserId, Profile:PropertyName, FirstName, LastName, DisplayName, Username, Email.
            </remarks>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.Extensions.ListControlExtensions.FindByTextWithIgnoreCase(System.Web.UI.WebControls.ListItemCollection,System.String)">
            <summary>
            Use this method instead of ListItemCollection.FindByText to find the specific item with case-insensitive.
            </summary>
            <param name="listItems">the items.</param>
            <param name="text">the item with this text want to find.</param>
            <returns>the specific item or null if didn't match the text with any item.</returns>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.Extensions.ListControlExtensions.FindByValueWithIgnoreCase(System.Web.UI.WebControls.ListItemCollection,System.String)">
            <summary>
            Use this method instead of ListItemCollection.FindBValue to find the specific item with case-insensitive.
            </summary>
            <param name="listItems">the items.</param>
            <param name="value">the item with this value want to find.</param>
            <returns>the specific item or null if didn't match the value with any item.</returns>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.CreateChildControls">
            -----------------------------------------------------------------------------
            <summary>
              Creates the control contained within this control
            </summary>
            <history>
              [cnurse]	07/31/2006 created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.OnPreRender(System.EventArgs)">
            -----------------------------------------------------------------------------
            <summary>
              Runs before the control is rendered.
            </summary>
            <history>
              [cnurse]	07/31/2006 created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.RenderEditMode(System.Web.UI.HtmlTextWriter)">
            -----------------------------------------------------------------------------
            <summary>
              Renders the control in edit mode
            </summary>
            <param name = "writer">An HtmlTextWriter to render the control to</param>
            <history>
              [cnurse]	04/20/2006	created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            -----------------------------------------------------------------------------
            <summary>
              Loads the Post Back Data and determines whether the value has change
            </summary>
            <remarks>
              In this case because the <see cref="F:DotNetNuke.Web.UI.WebControls.DnnFileEditControl._fileControl"/> is a contained control, we do not need 
              to process the PostBackData (it has been handled by the File Control).  We just use
              this method as the Framework calls it for us.
            </remarks>
            <param name="postDataKey">A key to the PostBack Data to load</param>
            <param name="postCollection">A name value collection of postback data</param>
            <history>
              [cnurse]	08/01/2006	created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.FileFilter">
            -----------------------------------------------------------------------------
            <summary>
              Gets or sets the current file extension filter.
            </summary>
            <history>
              [anurse]	08/11/2006 documented
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFileEditControl.FilePath">
            -----------------------------------------------------------------------------
            <summary>
              Gets or sets the current file path.
            </summary>
            <history>
              [cnurse]	07/02/2007 created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:DotNetNuke.Web.UI.WebControls.DnnFilePicker">
            <summary>
              The FilePicker Class provides a File Picker Control for DotNetNuke
            </summary>
            <history>
              [cnurse]	07/31/2006
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.AddButton(System.Web.UI.WebControls.LinkButton@)">
            <summary>
              AddButton adds a button to the Command Row
            </summary>
            <param name = "button">The button to add to the Row</param>
            <history>
              [cnurse]	07/31/2006 created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.AddButtonArea">
            <summary>
              AddCommandRow adds the Command Row
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.AddFileAndUploadArea">
            <summary>
              AddFileRow adds the Files Row
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.AddFolderArea">
            <summary>
              AddFolderRow adds the Folders Row
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.GeneratePreviewImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.AddMessageRow">
            <summary>
              AddMessageRow adds the Message Row
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.LoadFolders">
            <summary>
              LoadFolders fetches the list of folders from the Database
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.SetFilePath">
            <summary>
              SetFilePath sets the FilePath property
            </summary>
            <remarks>
              This overload uses the selected item in the Folder combo
            </remarks>
            <history>
              [cnurse]	08/01/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.SetFilePath(System.String)">
            <summary>
              SetFilePath sets the FilePath property
            </summary>
            <remarks>
              This overload allows the caller to specify a file
            </remarks>
            <param name = "fileName">The filename to use in setting the property</param>
            <history>
              [cnurse]	08/01/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ShowButton(System.Web.UI.WebControls.LinkButton,System.String)">
            <summary>
              ShowButton configures and displays a button
            </summary>
            <param name = "button">The button to configure</param>
            <param name = "command">The command name (amd key) of the button</param>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ShowImage">
            <summary>
              ShowImage displays the Preview Image
            </summary>
            <history>
              [cnurse]	08/01/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.CreateChildControls">
            <summary>
              CreateChildControls overrides the Base class's method to correctly build the
              control based on the configuration
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnFilePicker.OnPreRender(System.EventArgs)">
            <summary>
              OnPreRender runs just before the control is rendered
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.IsHost">
            <summary>
              Gets whether the control is on a Host or Portal Tab
            </summary>
            <value>A Boolean</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.Mode">
            <summary>
              Gets or sets the current mode of the control
            </summary>
            <remarks>
              Defaults to FileControlMode.Normal
            </remarks>
            <value>A FileControlMode enum</value>
            <history>
              [cnurse]	7/13/2005  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ParentFolder">
            <summary>
              Gets the root folder for the control
            </summary>
            <value>A String</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.PortalId">
            <summary>
              Gets or sets the file PortalId to use
            </summary>
            <remarks>
              Defaults to PortalSettings.PortalId
            </remarks>
            <value>An Integer</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>        
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.PortalSettings">
            <summary>
              Gets the current Portal Settings
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.CommandCssClass">
            <summary>
              Gets or sets the class to be used for the Labels
            </summary>
            <remarks>
              Defaults to 'CommandButton'
            </remarks>
            <value>A String</value>
            <history>
              [cnurse]	7/13/2005  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileFilter">
            <summary>
              Gets or sets the file Filter to use
            </summary>
            <remarks>
              Defaults to ''
            </remarks>
            <value>a comma seperated list of file extenstions no wildcards or periods e.g. "jpg,png,gif"</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileID">
            <summary>
              Gets or sets the FileID for the control
            </summary>
            <value>An Integer</value>
            <history>
              [cnurse]	7/13/2005  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FilePath">
            <summary>
              Gets or sets the FilePath for the control
            </summary>
            <value>A String</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.UsePersonalFolder">
            <summary>
              Gets or sets whether to Include Personal Folder
            </summary>
            <remarks>
              Defaults to false
            </remarks>
            <value>A Boolean</value>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.LabelCssClass">
            <summary>
              Gets or sets the class to be used for the Labels
            </summary>
            <value>A String</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.Required">
            <summary>
              Gets or sets whether the combos have a "Not Specified" option
            </summary>
            <remarks>
              Defaults to True (ie no "Not Specified")
            </remarks>
            <value>A Boolean</value>
            <history>
              [cnurse]	07/31/2006  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ShowDatabase">
            <summary>
              Gets or sets whether to Show Database Folders
            </summary>
            <remarks>
              Defaults to false
            </remarks>
            <value>A Boolean</value>
            <history>
              [cnurse]	7/31/2005  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ShowSecure">
            <summary>
              Gets or sets whether to Show Secure Folders
            </summary>
            <remarks>
              Defaults to false
            </remarks>
            <value>A Boolean</value>
            <history>
              [cnurse]	7/31/2005  created
            </history>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnFilePicker.ShowUpLoad">
            <summary>
              Gets or sets whether to Show the Upload Button
            </summary>
            <remarks>
              Defaults to True
            </remarks>
            <value>A Boolean</value>
            <history>
              [cnurse]	7/31/2005  created
            </history>
        </member>
        <member name="T:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileControlMode">
            <summary>
              Represents a possible mode for the File Control
            </summary>
        </member>
        <member name="F:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileControlMode.Normal">
            <summary>
              The File Control is in its Normal mode
            </summary>
        </member>
        <member name="F:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileControlMode.UpLoadFile">
            <summary>
              The File Control is in the Upload File mode
            </summary>
        </member>
        <member name="F:DotNetNuke.Web.UI.WebControls.DnnFilePicker.FileControlMode.Preview">
            <summary>
              The File Control is in the Preview mode
            </summary>
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnLanguageComboBox.AutoPostBack">
            -----------------------------------------------------------------------------
            <summary>
              Determines whether the List Auto Posts Back
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnLanguageLabel.CreateChildControls">
            -----------------------------------------------------------------------------
            <summary>
              CreateChildControls overrides the Base class's method to correctly build the
              control based on the configuration
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Web.UI.WebControls.DnnLanguageLabel.OnPreRender(System.EventArgs)">
            -----------------------------------------------------------------------------
            <summary>
              OnPreRender runs just before the control is rendered
            </summary>
            <history>
              [cnurse]	07/31/2006  created
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridButtonColumn.IconKey">
            -----------------------------------------------------------------------------
            <summary>
            The Icon Key to obtain ImageURL
            </summary>
            <value>A String</value>
            -----------------------------------------------------------------------------
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridButtonColumn.IconSize">
            -----------------------------------------------------------------------------
            <summary>
            The Icon Siz to obtain ImageURL
            </summary>
            <value>A String</value>
            -----------------------------------------------------------------------------
        </member>
        <member name="P:DotNetNuke.Web.UI.WebControls.DnnGridButtonColumn.IconStyle">
            -----------------------------------------------------------------------------
            <summary>
            The Icon Style to obtain ImageURL
            </summary>
            <value>A String</value>
            -----------------------------------------------------------------------------
        </member>
    </members>
</doc>
